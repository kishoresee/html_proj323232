<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Book Management Dashboard</title>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <style>
        .notification-dropdown {
            width: 350px;
            max-height: 500px;
            overflow-y: auto;
        }
        .notification-item:hover {
            background-color: #f8f9fa;
        }
        .navbar-custom {
            background-color: #f8f9fa;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body class="bg-light">
    <!-- Navigation Bar with Notification -->
    <nav class="navbar navbar-expand-lg navbar-custom fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Book Management</a>
            
            <!-- Notification Dropdown -->
            <div class="dropdown ms-auto">
                <button class="btn btn-link text-dark position-relative" 
                        type="button" 
                        id="notificationDropdown" 
                        data-bs-toggle="dropdown"
                        aria-expanded="false">
                    <i class="fas fa-bell fa-lg"></i>
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="notificationCount">
                        0
                    </span>
                </button>
                
                <!-- Dropdown Menu -->
                <ul class="dropdown-menu dropdown-menu-end notification-dropdown" aria-labelledby="notificationDropdown">
                    <li><h6 class="dropdown-header">Overdue Publications</h6></li>
                    <li><hr class="dropdown-divider"></li>
                    <div id="notificationList"></div>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container-fluid" style="margin-top: 80px;">
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Book Management Dashboard</h5>
                        <p class="text-muted">View and manage publication status</p>
                        <!-- Add your dashboard content here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- SharePoint JSOM Script -->
    <script>
        var notificationItems = [];

        function loadNotifications() {
            var ctx = SP.ClientContext.get_current();
            var list = ctx.get_web().get_lists().getByTitle("Book Management");
            var query = new SP.CamlQuery();
            
            var today = new Date().toISOString().split('T')[0];
            query.set_viewXml(
                `<View>
                    <Query>
                        <Where>
                            <Leq>
                                <FieldRef Name='PublicationDate' />
                                <Value Type='DateTime'>${today}</Value>
                            </Leq>
                        </Where>
                    </Query>
                </View>`
            );
            
            var items = list.getItems(query);
            ctx.load(items);
            
            ctx.executeQueryAsync(
                function() {
                    var listEnumerator = items.getEnumerator();
                    notificationItems = [];
                    
                    while (listEnumerator.moveNext()) {
                        var item = listEnumerator.get_current();
                        var authorField = item.get_item("AuthorName");
                        var authorId = authorField.get_lookupId();
                        
                        var user = ctx.get_web().getUserById(authorId);
                        ctx.load(user);
                        
                        notificationItems.push({
                            title: item.get_item("BookName"),
                            date: new Date(item.get_item("PublicationDate")).toLocaleDateString(),
                            author: user,
                            isbn: item.get_item("ISBN")
                        });
                    }
                    
                    ctx.executeQueryAsync(
                        function() {
                            updateNotificationUI();
                            sendEmailNotifications();
                        },
                        function(sender, args) {
                            console.error("Error loading users:", args.get_message());
                        }
                    );
                },
                function(sender, args) {
                    console.error("Error loading items:", args.get_message());
                }
            );
        }

        function updateNotificationUI() {
            var notificationList = $('#notificationList');
            var countSpan = $('#notificationCount');
            
            notificationList.empty();
            countSpan.text(notificationItems.length);
            
            notificationItems.forEach(function(item) {
                var notificationHtml = `
                    <li>
                        <div class="notification-item px-3 py-2">
                            <div class="d-flex justify-content-between">
                                <strong class="text-truncate">${item.title}</strong>
                                <small class="text-muted">${item.date}</small>
                            </div>
                            <div class="text-muted text-truncate">
                                Author: ${item.author.get_title()}
                            </div>
                            <small class="text-primary">ISBN: ${item.isbn}</small>
                        </div>
                    </li>
                    <li><hr class="dropdown-divider"></li>
                `;
                notificationList.append(notificationHtml);
            });
        }

        function sendEmailNotifications() {
            notificationItems.forEach(function(item) {
                var emailProperties = {
                    To: [item.author.get_email()],
                    Subject: "Overdue Publication Notification",
                    Body: `Dear ${item.author.get_title()},<br><br>
                           The book "${item.title}" (ISBN: ${item.isbn}) has passed its publication date.<br>
                           Publication Date: ${item.date}<br><br>
                           Please update the publication information if necessary.`
                };
                
                SP.Utilities.Utility.sendEmail(
                    SP.ClientContext.get_current(), 
                    emailProperties
                );
                
                SP.ClientContext.get_current().executeQueryAsync(
                    function() {
                        console.log("Email sent to:", item.author.get_email());
                    },
                    function(sender, args) {
                        console.error("Failed to send email:", args.get_message());
                    }
                );
            });
        }

        // Initialize when SharePoint context is loaded
        ExecuteOrDelayUntilScriptLoaded(function() {
            SP.SOD.executeFunc('sp.js', 'SP.ClientContext', function() {
                SP.SOD.registerSod('sp.userprofiles.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.userprofiles.js'));
                SP.SOD.executeFunc('sp.userprofiles.js', 'SP.Utilities.Utility', loadNotifications);
            });
        }, 'sp.js');
    </script>
</body>
</html>
