function sendEmailNotifications() {
    // Ensure SP utilities are loaded first
    SP.SOD.executeFunc('sp.js', 'SP.ClientContext', function() {
        SP.SOD.executeFunc('sp.js', 'SP.Utilities.Utility', function() {
            notificationItems.forEach(function(item) {
                try {
                    var emailProperties = new SP.Utilities.EmailProperties();
                    emailProperties.set_to(item.author.get_email());
                    emailProperties.set_subject("Overdue Publication Notification");
                    emailProperties.set_body(
                        `Dear ${item.author.get_title()},<br><br>
                        The book "${item.title}" (ISBN: ${item.isbn}) has passed its publication date.<br>
                        Publication Date: ${item.date}<br><br>
                        Please update the publication information if necessary.`
                    );

                    SP.Utilities.Utility.sendEmail(
                        SP.ClientContext.get_current(), 
                        emailProperties
                    );
                    
                    SP.ClientContext.get_current().executeQueryAsync(
                        function() {
                            console.log("Email sent to:", item.author.get_email());
                        },
                        function(sender, args) {
                            console.error("Failed to send email:", args.get_message());
                        }
                    );
                } catch (e) {
                    console.error("Email error:", e);
                }
            });
        });
    });
}




<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Book Management â€“ Update & Delete</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

  <!-- SharePoint JSOM + People Picker -->
  <script src="/_layouts/15/sp.runtime.js" type="text/javascript"></script>
  <script src="/_layouts/15/sp.js" type="text/javascript"></script>
  <script src="/_layouts/15/clienttemplates.js" type="text/javascript"></script>
  <script src="/_layouts/15/clientforms.js" type="text/javascript"></script>
  <script src="/_layouts/15/clientpeoplepicker.js" type="text/javascript"></script>
  <script src="/_layouts/15/autofill.js" type="text/javascript"></script>
</head>
<body class="bg-light p-4">
  <div class="container">
    <h2 class="mb-4 text-center text-primary">Book Management</h2>

    <!-- table of books -->
    <div class="table-responsive mb-5">
      <table class="table table-bordered table-striped text-center" id="bookTable">
        <thead class="table-dark">
          <tr>
            <th>Actions</th>
            <th>Book Name</th>
            <th>Publication Date</th>
            <th>Author</th>
            <th>ISBN</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>

    <!-- update card -->
    <div class="card shadow">
      <div class="card-header bg-primary text-white">
        <h4 class="mb-0">Update Book Details</h4>
      </div>
      <div class="card-body">
        <div class="row g-3">
          <div class="col-md-6">
            <label class="form-label">Book Name</label>
            <input id="bookName" class="form-control" />
          </div>
          <div class="col-md-6">
            <label class="form-label">Publication Date</label>
            <input id="pubDate" type="date" class="form-control" />
          </div>
          <div class="col-md-6">
            <label class="form-label">Author (People Picker)</label>
            <div id="peoplePickerAuthor"></div>
          </div>
          <div class="col-md-6">
            <label class="form-label">ISBN</label>
            <input id="isbn" class="form-control" />
          </div>
        </div>
        <input type="hidden" id="itemId" />
        <div class="mt-4 text-end">
          <button class="btn btn-success" onclick="updateItem()">Update Book</button>
        </div>
      </div>
    </div>
  </div>

  <script type="text/javascript">
    // Initialize People Picker & then load items
    ExecuteOrDelayUntilScriptLoaded(function() {
      initPeoplePicker("peoplePickerAuthor");
      loadItems();
    }, "sp.js");

    function initPeoplePicker(domId) {
      var schema = {
        PrincipalAccountType: 'User,DL,SecGroup,SPGroup',
        SearchPrincipalSource: 15,
        ResolvePrincipalSource: 15,
        AllowMultipleValues: false,
        MaximumEntitySuggestions: 50,
        Width: '100%'
      };
      SPClientPeoplePicker_InitStandaloneControlWrapper(domId, null, schema);
    }

    function getSelectedUserKey() {
      var pp = SPClientPeoplePicker.SPClientPeoplePickerDict.peoplePickerAuthor_TopSpan;
      var users = pp.GetAllUserInfo();
      return (users.length>0)? users[0].Key : null;
    }

    function loadItems() {
      var ctx = SP.ClientContext.get_current();
      var list = ctx.get_web().get_lists().getByTitle("Book Management");
      var items = list.getItems(new SP.CamlQuery());
      // include only the exact internal names
      ctx.load(items, 'Include(Id, BookName, Publication_x0020_date, AuthorName, ISBN)');
      ctx.executeQueryAsync(function() {
        var tbody = document.querySelector("#bookTable tbody");
        tbody.innerHTML = '';
        var enumItems = items.getEnumerator();
        while(enumItems.moveNext()) {
          var it = enumItems.get_current();
          var authorField = it.get_item("AuthorName");
          var authorText = authorField? authorField.get_lookupValue() : '';
          var dateVal = it.get_item("Publication_x0020_date");
          var dateStr = dateVal? new Date(dateVal).toISOString().split('T')[0] : '';
          tbody.innerHTML += `
            <tr>
              <td>
                <button class="btn btn-sm btn-outline-primary" onclick="editItem(${it.get_id()})">Select</button>
                <button class="btn btn-sm btn-outline-danger ms-2" onclick="deleteItem(${it.get_id()})">Delete</button>
              </td>
              <td>${it.get_item("BookName")||''}</td>
              <td>${dateStr}</td>
              <td>${authorText}</td>
              <td>${it.get_item("ISBN")||''}</td>
            </tr>`;
        }
      }, function(s,a){
        alert("Load failed: " + a.get_message());
      });
    }

    function editItem(id) {
      var ctx = SP.ClientContext.get_current();
      var list = ctx.get_web().get_lists().getByTitle("Book Management");
      var it = list.getItemById(id);
      ctx.load(it, 'BookName, Publication_x0020_date, AuthorName, ISBN');
      ctx.executeQueryAsync(function(){
        document.getElementById("itemId").value = id;
        document.getElementById("bookName").value = it.get_item("BookName")||'';
        var d = it.get_item("Publication_x0020_date");
        document.getElementById("pubDate").value = d? new Date(d).toISOString().split('T')[0] : '';
        document.getElementById("isbn").value = it.get_item("ISBN")||'';
        // reset people picker
        document.getElementById("peoplePickerAuthor").innerHTML = '';
        initPeoplePicker("peoplePickerAuthor");
        setTimeout(function(){
          var auth = it.get_item("AuthorName");
          if(auth) {
            SPClientPeoplePicker.SPClientPeoplePickerDict.peoplePickerAuthor_TopSpan.AddUserKeys(auth.get_lookupValue());
          }
        }, 500);
      }, function(s,a){
        alert("Edit load failed: "+a.get_message());
      });
    }

    function updateItem() {
      var id = document.getElementById("itemId").value;
      var name = document.getElementById("bookName").value.trim();
      var isbn = document.getElementById("isbn").value.trim();
      var date = document.getElementById("pubDate").value;
      var authKey = getSelectedUserKey();
      if(!id || !name || !isbn || !date || !authKey) {
        return alert("All fields including Author are required");
      }

      var ctx = SP.ClientContext.get_current();
      var web = ctx.get_web();
      var list = web.get_lists().getByTitle("Book Management");
      var it = list.getItemById(id);

      var user = web.ensureUser(authKey);
      ctx.load(user);
      ctx.executeQueryAsync(function(){
        var uv = SP.FieldUserValue.fromUser(user.get_loginName());
        it.set_item("BookName", name);
        it.set_item("Publication_x0020_date", new Date(date));
        it.set_item("ISBN", isbn);
        it.set_item("AuthorName", uv);
        it.update();
        ctx.executeQueryAsync(function(){
          alert("Book updated!");
          loadItems();
          // clear form
          document.getElementById("itemId").value='';
          document.getElementById("bookName").value='';
          document.getElementById("isbn").value='';
          document.getElementById("pubDate").value='';
          document.getElementById("peoplePickerAuthor").innerHTML='';
          initPeoplePicker("peoplePickerAuthor");
        }, function(s,a){
          alert("Update failed: "+a.get_message());
        });
      }, function(s,a){
        alert("Author lookup failed: "+a.get_message());
      });
    }

    function deleteItem(id) {
      if(!confirm("Delete this book?")) return;
      var ctx = SP.ClientContext.get_current();
      var list = ctx.get_web().get_lists().getByTitle("Book Management");
      list.getItemById(id).deleteObject();
      ctx.executeQueryAsync(function(){
        alert("Deleted.");
        loadItems();
      }, function(s,a){
        alert("Delete failed: "+a.get_message());
      });
    }
  </script>
</body>
</html>





<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Add Book Details</title>
  <!-- Bootstrap 5 CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #495057;
    }
    .card {
      border-radius: 15px;
    }
    .form-label {
      color: #fff;
    }
  </style>
</head>
<body>

  <div class="container py-5">
    <div class="row justify-content-center">
      <div class="col-md-6">
        <div class="card shadow-lg p-4">
          <h4 class="text-center mb-4">Add Book Details</h4>
          <form>
            <div class="mb-3">
              <label for="bookName" class="form-label">Book Name</label>
              <input type="text" class="form-control" id="bookName" placeholder="Enter book name">
            </div>
            <div class="mb-3">
              <label for="authorName" class="form-label">Author Name</label>
              <input type="text" class="form-control" id="authorName" placeholder="Enter author name">
            </div>
            <div class="mb-3">
              <label for="isbn" class="form-label">ISBN</label>
              <input type="text" class="form-control" id="isbn" placeholder="Enter ISBN">
            </div>
            <div class="mb-3">
              <label for="publicationDate" class="form-label">Publication Date</label>
              <input type="date" class="form-control" id="publicationDate">
            </div>
            <button type="submit" class="btn btn-primary w-100">Add Book</button>
          </form>
        </div>
      </div>
    </div>
  </div>

</body>
</html>
