Sure! Below is a complete HTML file that you can copy and use. It includes Bootstrap for basic styling (no <form> tag), and uses jQuery + REST API to create a view in a SharePoint list or document library based on user input.


---

Full HTML File (SharePoint View Creator)

<!DOCTYPE html>
<html>
<head>
  <title>Create SharePoint View</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body class="bg-light">

  <div class="container mt-5">
    <h3 class="mb-4">Create a Custom View in SharePoint List</h3>

    <div class="form-group">
      <label>List Name</label>
      <input type="text" id="listName" class="form-control" placeholder="e.g., Documents">
    </div>

    <div class="form-group">
      <label>View Name</label>
      <input type="text" id="viewName" class="form-control" placeholder="e.g., My Custom View">
    </div>

    <div class="form-group">
      <label>Fields to Display (comma-separated)</label>
      <input type="text" id="viewFields" class="form-control" placeholder="e.g., Title,Created,Author">
    </div>

    <button class="btn btn-primary" onclick="createView()">Create View</button>

    <div id="result" class="mt-4"></div>
  </div>

  <script>
    function createView() {
      var listTitle = $("#listName").val().trim();
      var viewTitle = $("#viewName").val().trim();
      var viewFields = $("#viewFields").val().split(',').map(field => field.trim());

      if (!listTitle || !viewTitle || viewFields.length === 0) {
        $("#result").html('<div class="alert alert-warning">Please fill all fields.</div>');
        return;
      }

      $.ajax({
        url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/GetByTitle('" + listTitle + "')/views",
        method: "POST",
        contentType: "application/json;odata=verbose",
        headers: {
          "Accept": "application/json;odata=verbose",
          "X-RequestDigest": $("#__REQUESTDIGEST").val()
        },
        data: JSON.stringify({
          '__metadata': { 'type': 'SP.View' },
          'Title': viewTitle,
          'ViewFields': { 'Items': viewFields },
          'RowLimit': 30,
          'ViewQuery': '<OrderBy><FieldRef Name="Created" Ascending="FALSE" /></OrderBy>'
        })
      }).done(function (data) {
        $("#result").html('<div class="alert alert-success">View "' + viewTitle + '" created successfully in list "' + listTitle + '".</div>');
      }).fail(function (error) {
        $("#result").html('<div class="alert alert-danger">Error: ' + JSON.stringify(error.responseJSON.error.message.value) + '</div>');
      });
    }
  </script>
</body>
</html>


---

How to Use:

Save this as an .html file.

Use it inside a Script Editor or Content Editor Web Part in SharePoint 2016 classic page.

Or serve it from a SharePoint-hosted app/page.

Make sure jQuery is available and you're logged into SharePoint.


Want to add more advanced features like filters or set it as default view?

