Perfect — since set_query() is working for you, let's build a clean JSOM version that creates a view with:

Sorted in ascending order by uidNo field

Only using set_query()

Avoids view rendering conflicts (Correlation ID error)


Here's a safe and minimal version:


---

✅ JSOM Code — View Sorted by uidNo

<script type="text/javascript">
    function createUidNoSortedView() {
        var ctx = SP.ClientContext.get_current();
        var list = ctx.get_web().get_lists().getByTitle("YourListName"); // Replace with your list name

        var camlQuery =
            "<Query>" +
                "<OrderBy>" +
                    "<FieldRef Name='uidNo' Ascending='TRUE' />" +
                "</OrderBy>" +
            "</Query>";

        var viewInfo = new SP.ViewCreationInformation();
        viewInfo.set_title("UID No Ascending View");
        viewInfo.set_query(camlQuery);
        viewInfo.set_viewTypeKind(SP.ViewType.none);  // Keep this unless you need a different type
        viewInfo.set_paged(true);
        viewInfo.set_rowLimit(50);

        var views = list.get_views();
        views.add(viewInfo);

        ctx.load(views);
        ctx.executeQueryAsync(
            function () {
                alert("View created successfully.");
            },
            function (sender, args) {
                alert("Failed to create view: " + args.get_message());
            }
        );
    }

    // Ensure SP.js is loaded
    SP.SOD.executeFunc('sp.js', 'SP.ClientContext', createUidNoSortedView);
</script>


---

Notes:

uidNo must be the internal name of the field.

This avoids using <ViewFields>, which is what causes rendering issues in your case.

You can later manually customize columns in the SharePoint UI if needed (or with REST or PnP if you want dynamic control).


Let me know if you'd like to add a filter in the view (e.g., Status = Active), and I’ll update the CAML query!

