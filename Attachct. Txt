
Below is a revised attachCT function that—just like your fixed addFieldToCT—uses an enumeration helper to find the content type by name (since getByName doesn’t exist on SP.ContentTypeCollection). I’ll include the helper again for completeness, then show attachCT and explain every line.


---

1. Helper: findContentTypeByName

/**
 * Finds a site content type by display name.
 * @param {string} ctName  The name of the CT to find.
 * @param {function} onFound  Callback receiving (ct) or null if not found.
 */
function findContentTypeByName(ctName, onFound) {
  var ctx = SP.ClientContext.get_current();
  var web = ctx.get_web();
  var cts = web.get_contentTypes();
  // Ask SharePoint for Name and Id properties of each CT
  ctx.load(cts, 'Include(Name, Id)');
  ctx.executeQueryAsync(
    function() {
      var enumerator = cts.getEnumerator();
      var found = null;
      while (enumerator.moveNext()) {
        var current = enumerator.get_current();
        if (current.get_name() === ctName) {
          found = current;
          break;
        }
      }
      onFound(found);
    },
    function(sender, args) {
      console.error('Error loading content types: ' + args.get_message());
      onFound(null);
    }
  );
}

Line 1–4: Declares a function taking ctName and a callback.

Line 5–7: Grabs the current ClientContext, Web, and its ContentTypeCollection.

Line 8: ctx.load(cts, 'Include(Name, Id)') tells JSOM to retrieve each CT’s Name and Id.

Line 9: executeQueryAsync sends the request.

Line 10–18: On success, we iterate with getEnumerator(), compare get_name() to ctName, and break when found.

Line 19–22: On failure, log the error and call back with null.



---

2. Revised attachCT Using the Helper

/**
 * Attaches a site content type to a list.
 * @param {string} listTitle  Title of the list.
 * @param {string} ctName     Display name of the CT to attach.
 * @param {function} callback Called when done.
 */
function attachCT(listTitle, ctName, callback) {
  // Step A: Find the CT object by name
  findContentTypeByName(ctName, function(ct) {
    if (!ct) {
      console.error('Content Type not found: ' + ctName);
      return callback();
    }

    // Step B: Once CT is found, get the list
    var ctx  = SP.ClientContext.get_current();
    var web  = ctx.get_web();
    var list = web.get_lists().getByTitle(listTitle);

    // Step C: Enable content types on the list
    list.set_contentTypesEnabled(true);

    // Step D: Add the existing content type to the list’s collection
    list.get_contentTypes().addExistingContentType(ct);

    // Step E: Execute the batched call
    ctx.executeQueryAsync(
      function() {
        console.log('Content Type "' + ctName + '" attached to list "' + listTitle + '".');
        callback();
      },
      function(sender, args) {
        console.error('Error attaching CT: ' + args.get_message());
        callback();
      }
    );
  });
}

Line-by-Line Explanation

1. Function Signature

function attachCT(listTitle, ctName, callback) {

Declares attachCT, takes the list title, the CT name, and a callback.



2. Find the CT

findContentTypeByName(ctName, function(ct) {

Invokes our helper to locate the SP.ContentType object by its display name.



3. Handle “not found”

if (!ct) { ... }

If enumeration didn’t find the CT, logs an error and still calls callback() to continue your chain.



4. Re-grab Context and Web

var ctx  = SP.ClientContext.get_current();
var web  = ctx.get_web();

You need a fresh ctx for the next operations.



5. Get the Target List

var list = web.get_lists().getByTitle(listTitle);

Retrieves the SP.List object for your listTitle.



6. Enable Content Types

list.set_contentTypesEnabled(true);

Activates the list’s setting to allow multiple content types.



7. Add the CT

list.get_contentTypes().addExistingContentType(ct);

Queues attaching your previously found CT to the list’s collection.



8. Execute the Batch

ctx.executeQueryAsync(successFn, errorFn);

Sends the queued change:

On success: logs confirmation, invokes callback().

On failure: logs the error, still invokes callback() so your provisioning chain doesn’t break.






---

How to Integrate

Replace your old attachCT with this version. Make sure findContentTypeByName is declared before you call attachCT.

Now your provisioning chain will reliably:

1. Enumerate to find the CT by name


2. Enable CT support on the list


3. Attach the CT


4. Continue on success or failure



Let me know if you hit any other JSOM quirks!

